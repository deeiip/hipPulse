var placehlderData = eval({ "status": "OK", "time_stamp": { "Value": "2015-09-23T15:42:13.000Z", "Type": 0 }, "data": { "status": "OK", "usage": "By accessing AlchemyAPI or using information generated by AlchemyAPI, you are agreeing to be bound by the AlchemyAPI Terms of Use: http://www.alchemyapi.com/company/terms.html", "url": "https://hipchatimpulse.azurewebsites.net/api/room?name=1920655&forAlchemi=true", "language": "english", "concepts": [{ "text": "Google App Engine", "relevance": "0.957818", "website": "http://appengine.google.com", "dbpedia": "http://dbpedia.org/resource/Google_App_Engine", "freebase": "http://rdf.freebase.com/ns/m.0407gp1" }, { "text": "Web2py", "relevance": "0.72453", "website": "http://www.web2py.com/", "dbpedia": "http://dbpedia.org/resource/Web2py", "freebase": "http://rdf.freebase.com/ns/m.04cqr3j" }, { "text": "Django", "relevance": "0.690354", "website": "http://www.djangoproject.com", "dbpedia": "http://dbpedia.org/resource/Django_(web_framework)", "freebase": "http://rdf.freebase.com/ns/m.06y_qx", "yago": "http://yago-knowledge.org/resource/Django_(web_framework)" }, { "text": "Azure Services Platform", "relevance": "0.578163", "website": "http://www.microsoft.com/windowsazure/", "dbpedia": "http://dbpedia.org/resource/Azure_Services_Platform", "freebase": "http://rdf.freebase.com/ns/m.04y7lrx" }, { "text": "Guido van Rossum", "relevance": "0.55739", "website": "http://www.python.org/~guido/", "dbpedia": "http://dbpedia.org/resource/Guido_van_Rossum", "freebase": "http://rdf.freebase.com/ns/m.01h05c", "yago": "http://yago-knowledge.org/resource/Guido_van_Rossum" }, { "text": "Web Server Gateway Interface", "relevance": "0.554274", "dbpedia": "http://dbpedia.org/resource/Web_Server_Gateway_Interface", "freebase": "http://rdf.freebase.com/ns/m.051w28" }] } });
var data = placehlderData.data.concepts;
var labels = [];
var relev = [];
for (var i = 0; i < data.length; i++) {
    labels.push(data[i].text);
    relev.push(data[i].relevance * 100);
    if (data[i].website == null)
    {
        var htmlStr = '<div class="callout callout-info" style="margin:10px; margin-left:10px; margin-right:10px"> <h4>' +
        data[i].text + '</h4><p>' + '<ul><li> Website: Not Available </li>  </ul>' + '</p></div>';

    }
    else
    {
        var htmlStr = '<div class="callout callout-info" style="margin:10px; margin-left:10px; margin-right:10px"> <h4>' +
        data[i].text + '</h4><p>' + '<ul><li> Website: <a href="' + data[i].website + '"target="blank">' + data[i].website + '</a></li>  </ul>' + '</p></div>';

    }
    var newConcept = $(htmlStr).hide();
    $('#concepts').append(newConcept);
    newConcept.show('normal');
}
var ctx = $("#concept-barchart").get(0).getContext("2d");
var data = {
    labels: labels,
    datasets: [
        
        {
            label: "My Second dataset",
            fillColor: "rgba(151,187,205,0.5)",
            strokeColor: "rgba(151,187,205,0.8)",
            highlightFill: "rgba(151,187,205,0.75)",
            highlightStroke: "rgba(151,187,205,1)",
            data: relev
        }
    ]
};
var options = {
    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
    scaleBeginAtZero: true,

    //Boolean - Whether grid lines are shown across the chart
    scaleShowGridLines: true,

    //String - Colour of the grid lines
    scaleGridLineColor: "rgba(0,0,0,.05)",

    //Number - Width of the grid lines
    scaleGridLineWidth: 1,

    //Boolean - Whether to show horizontal lines (except X axis)
    scaleShowHorizontalLines: true,

    //Boolean - Whether to show vertical lines (except Y axis)
    scaleShowVerticalLines: true,

    //Boolean - If there is a stroke on each bar
    barShowStroke: true,

    //Number - Pixel width of the bar stroke
    barStrokeWidth: 2,

    //Number - Spacing between each of the X value sets
    barValueSpacing: 5,

    //Number - Spacing between data sets within X values
    barDatasetSpacing: 1,

    //String - A legend template
    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

};
var myBarChart = new Chart(ctx).Bar(data, options);