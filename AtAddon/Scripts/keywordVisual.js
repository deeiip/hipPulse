function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}
var roomNumber = getParameterByName('roomid');
var url = '/api/report?roomid=' + roomNumber + '&type=2';
$('#room_number').text(roomNumber);
$('.room-nav').each(function () {
    var href = $(this).attr('href');

    if (href) {
        href += (href.match(/\?/) ? '&' : '?') + 'roomid=' + getParameterByName('roomid');
        $(this).attr('href', href);
    }
});

//var placeHolder = '{"status":"OK","time_stamp":{"Value":"2015-09-23T15:42:13.000Z","Type":0},"data":{"status":"OK","usage":"By accessing AlchemyAPI or using information generated by AlchemyAPI, you are agreeing to be bound by the AlchemyAPI Terms of Use: http://www.alchemyapi.com/company/terms.html","url":"https://hipchatimpulse.azurewebsites.net/api/room?name=1920655&forAlchemi=true","totalTransactions":"1","language":"english","keywords":[{"relevance":"0.950344","text":"app engine"},{"relevance":"0.837821","text":"google app engine"},{"relevance":"0.832032","text":"app engine app"},{"relevance":"0.778059","text":"gae remote shell"},{"relevance":"0.761609","text":"app engine magic"},{"relevance":"0.744124","text":"app engine sdk"},{"relevance":"0.740915","text":"channelf ro app"},{"relevance":"0.734225","text":"simple java app"},{"relevance":"0.732412","text":"traditional app engine"},{"relevance":"0.700124","text":"server app"},{"relevance":"0.666652","text":"kichuku previous SDK"},{"relevance":"0.663571","text":"app running."},{"relevance":"0.662037","text":"ssl certs"},{"relevance":"0.659824","text":"google servers"},{"relevance":"0.658343","text":"meta data"},{"relevance":"0.655961","text":"wildcard ssl"},{"relevance":"0.655063","text":"specific linux tools"},{"relevance":"0.655033","text":"wildcard ssl certs"},{"relevance":"0.654431","text":"Google Cloud Endpoints"},{"relevance":"0.652469","text":"great news"},{"relevance":"0.651848","text":"google cloud storage"},{"relevance":"0.651626","text":"java gae sdk"},{"relevance":"0.647812","text":"file operation syscalls"},{"relevance":"0.646194","text":"quick access information"},{"relevance":"0.645604","text":"normal ssl certs"},{"relevance":"0.642015","text":"CI deploy script"},{"relevance":"0.640849","text":"wildcard ssl cert"},{"relevance":"0.640084","text":"script needs browser"},{"relevance":"0.638556","text":"env variable issue"},{"relevance":"0.636575","text":"multiple suddoamin routes"},{"relevance":"0.634786","text":"easier methods"},{"relevance":"0.631824","text":"runtime process port"},{"relevance":"0.629982","text":"unknown network cloudsql"},{"relevance":"0.606675","text":"Google Script"},{"relevance":"0.605785","text":"data access"},{"relevance":"0.600849","text":"google server"},{"relevance":"0.59728","text":"code module"},{"relevance":"0.594114","text":"image gallery"},{"relevance":"0.593407","text":"problem"},{"relevance":"0.593015","text":"google cloud."},{"relevance":"0.592711","text":"django server"},{"relevance":"0.592327","text":"local problem"},{"relevance":"0.591294","text":"hipchat"},{"relevance":"0.591165","text":"zipfile /usr/local/lib/python2.7/dist-packages/ropemode-0.2-py2.7.egg"},{"relevance":"0.589867","text":"latest release"},{"relevance":"0.58949","text":"user"},{"relevance":"0.588632","text":"user models"},{"relevance":"0.587753","text":"appengine question"},{"relevance":"0.586786","text":"code work"},{"relevance":"0.586673","text":"public urls"}]}}';
//var data = eval(placeHolder);





var diameter = 620,
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([800, 720])
    .padding(1.5);

var svg = d3.select("#key-chart").append("svg")
    .attr("width", 800)
    .attr("height", 720)
    .attr("class", "bubble");

d3.json(url, function (error, root) {
    if (error) throw error;

    var node = svg.selectAll(".node")
        .data(bubble.nodes(classes(root))
        .filter(function (d) { return !d.children; }))
      .enter().append("g")
        .attr("class", "node")
        .attr("transform", function (d) { return "translate(" + d.x + "," + d.y + ")"; });

    node.append("title")
        .html(function (d) {
            var num = d.value;
            var temp = Math.round(num * 100) / 100;
            return "Word: " + d.name + "<br>Relevence: " + temp + "%";
        });

    node.append("circle")
        .attr("r", function (d) { return d.r; })
        .style("fill", function (d) { return color(d.name); });

    node.append("text")
        .attr("dy", ".2em")
        .style("text-anchor", "middle")
        .text(function (d) {
            if(d.name.length>8)
            {
                return d.name.substring(0, 12);
            }
            else
            {
                return d.name;
            }
        });
});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
    var classes = [];

    for (var i = 0; i < root.data.keywords.length; i++) {
        classes.push({ name: root.data.keywords[i].text, value: parseFloat(root.data.keywords[i].relevance*100) })
    }
    return { children: classes };
}

d3.select(self.frameElement).style("height", 720 + "px");